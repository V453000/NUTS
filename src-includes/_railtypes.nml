spriteset(canalrails_overlays, "gfx/_canalrails.png") {overlay()}	
spriteset(canalrails_underlays, "gfx/_canalrails.png") {underlay()}	
spriteset(canalrails_tunnels, "gfx/_canalrails.png") {tunnels(0)}	
spriteset(canalrails_tunnels_bk, "gfx/_canalrails.png") {tunnels(1)}	
spriteset(canalrails_road_crossing, "gfx/_canalrails.png") {road_crossing()}	

spriteset(canalrails_bridge_surfaces_original, "gfx/_canalrails.png") {bridge_surfaces(0)}	
spriteset(canalrails_bridge_surfaces_newbridges, "gfx/_canalrails.png") {bridge_surfaces(400)}	


bridge_overlay_stuff = 0;

if (grf_future_status("\53\5A\05\01")) {
	bridge_overlay_stuff = 1;
}
if (grf_future_status("\74\67\74\62")) {
	bridge_overlay_stuff = 1;
}

tunnel_stuff = 0;
if (grf_future_status("\42\4B\54\62")) {
	tunnel_stuff = 1;
}

switch(FEAT_RAILTYPES, SELF, bridge_overlay_switch, bridge_overlay_stuff) {
  1: canalrails_bridge_surfaces_newbridges;
  canalrails_bridge_surfaces_original;
}

switch(FEAT_RAILTYPES, SELF, tunnels_switch, tunnel_stuff) {
  1: canalrails_tunnels_bk;
  canalrails_tunnels;
}

// -----------------------------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------------------------
// ----------- SIGNALS
// -----------------------------------------------------------------------------------------------------------------------------
// -----------------------------------------------------------------------------------------------------------------------------


// BRIX semaphore signals -----------------------------------------------------------------------------------------------
spriteset(BRIX_semaphore_signal_block_green, 	 "gfx_32bpp/signals-semaphore-8bpp.png") {template_SIGNALS_x1_8rotations(1, 0)}	
spriteset(BRIX_semaphore_signal_block_red,   	 "gfx_32bpp/signals-semaphore-8bpp.png") {template_SIGNALS_x1_8rotations(0, 0)}	
spriteset(BRIX_semaphore_signal_entry_green, 	 "gfx_32bpp/signals-semaphore-8bpp.png") {template_SIGNALS_x1_8rotations(1, 1)}	
spriteset(BRIX_semaphore_signal_entry_red, 	   "gfx_32bpp/signals-semaphore-8bpp.png") {template_SIGNALS_x1_8rotations(0, 1)}	
spriteset(BRIX_semaphore_signal_exit_green, 	 "gfx_32bpp/signals-semaphore-8bpp.png") {template_SIGNALS_x1_8rotations(1, 2)}	
spriteset(BRIX_semaphore_signal_exit_red, 	   "gfx_32bpp/signals-semaphore-8bpp.png") {template_SIGNALS_x1_8rotations(0, 2)}	
spriteset(BRIX_semaphore_signal_combo_green, 	 "gfx_32bpp/signals-semaphore-8bpp.png") {template_SIGNALS_x1_8rotations(1, 3)}	
spriteset(BRIX_semaphore_signal_combo_red, 	   "gfx_32bpp/signals-semaphore-8bpp.png") {template_SIGNALS_x1_8rotations(0, 3)}	
spriteset(BRIX_semaphore_signal_2wayPBS_green, "gfx_32bpp/signals-semaphore-8bpp.png") {template_SIGNALS_x1_8rotations(1, 4)}	
spriteset(BRIX_semaphore_signal_2wayPBS_red, 	 "gfx_32bpp/signals-semaphore-8bpp.png") {template_SIGNALS_x1_8rotations(0, 4)}	
spriteset(BRIX_semaphore_signal_1wayPBS_green, "gfx_32bpp/signals-semaphore-8bpp.png") {template_SIGNALS_x1_8rotations(1, 5)}	
spriteset(BRIX_semaphore_signal_1wayPBS_red, 	 "gfx_32bpp/signals-semaphore-8bpp.png") {template_SIGNALS_x1_8rotations(0, 5)}

alternative_sprites(BRIX_semaphore_signal_block_green,     ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx_32bpp/signals-semaphore.png")      {template_SIGNALS_x1_8rotations(1, 0)}
alternative_sprites(BRIX_semaphore_signal_block_green,     ZOOM_LEVEL_IN_4X,  BIT_DEPTH_8BPP,  "gfx_32bpp/signals-semaphore-8bpp.png") {template_SIGNALS_x4_8rotations(1, 0)}
alternative_sprites(BRIX_semaphore_signal_block_green,     ZOOM_LEVEL_IN_4X,  BIT_DEPTH_32BPP, "gfx_32bpp/signals-semaphore.png")      {template_SIGNALS_x4_8rotations(1, 0)}
alternative_sprites(BRIX_semaphore_signal_block_red,       ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx_32bpp/signals-semaphore.png")      {template_SIGNALS_x1_8rotations(0, 0)}
alternative_sprites(BRIX_semaphore_signal_block_red,       ZOOM_LEVEL_IN_4X,  BIT_DEPTH_8BPP,  "gfx_32bpp/signals-semaphore-8bpp.png") {template_SIGNALS_x4_8rotations(0, 0)}
alternative_sprites(BRIX_semaphore_signal_block_red,       ZOOM_LEVEL_IN_4X,  BIT_DEPTH_32BPP, "gfx_32bpp/signals-semaphore.png")      {template_SIGNALS_x4_8rotations(0, 0)}
alternative_sprites(BRIX_semaphore_signal_entry_green,     ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx_32bpp/signals-semaphore.png")      {template_SIGNALS_x1_8rotations(1, 1)}
alternative_sprites(BRIX_semaphore_signal_entry_green,     ZOOM_LEVEL_IN_4X,  BIT_DEPTH_8BPP,  "gfx_32bpp/signals-semaphore-8bpp.png") {template_SIGNALS_x4_8rotations(1, 1)}
alternative_sprites(BRIX_semaphore_signal_entry_green,     ZOOM_LEVEL_IN_4X,  BIT_DEPTH_32BPP, "gfx_32bpp/signals-semaphore.png")      {template_SIGNALS_x4_8rotations(1, 1)}
alternative_sprites(BRIX_semaphore_signal_entry_red,       ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx_32bpp/signals-semaphore.png")      {template_SIGNALS_x1_8rotations(0, 1)}
alternative_sprites(BRIX_semaphore_signal_entry_red,       ZOOM_LEVEL_IN_4X,  BIT_DEPTH_8BPP,  "gfx_32bpp/signals-semaphore-8bpp.png") {template_SIGNALS_x4_8rotations(0, 1)}
alternative_sprites(BRIX_semaphore_signal_entry_red,       ZOOM_LEVEL_IN_4X,  BIT_DEPTH_32BPP, "gfx_32bpp/signals-semaphore.png")      {template_SIGNALS_x4_8rotations(0, 1)}
alternative_sprites(BRIX_semaphore_signal_exit_green,      ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx_32bpp/signals-semaphore.png")      {template_SIGNALS_x1_8rotations(1, 2)}
alternative_sprites(BRIX_semaphore_signal_exit_green,      ZOOM_LEVEL_IN_4X,  BIT_DEPTH_8BPP,  "gfx_32bpp/signals-semaphore-8bpp.png") {template_SIGNALS_x4_8rotations(1, 2)}
alternative_sprites(BRIX_semaphore_signal_exit_green,      ZOOM_LEVEL_IN_4X,  BIT_DEPTH_32BPP, "gfx_32bpp/signals-semaphore.png")      {template_SIGNALS_x4_8rotations(1, 2)}
alternative_sprites(BRIX_semaphore_signal_exit_red,        ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx_32bpp/signals-semaphore.png")      {template_SIGNALS_x1_8rotations(0, 2)}
alternative_sprites(BRIX_semaphore_signal_exit_red,        ZOOM_LEVEL_IN_4X,  BIT_DEPTH_8BPP,  "gfx_32bpp/signals-semaphore-8bpp.png") {template_SIGNALS_x4_8rotations(0, 2)}
alternative_sprites(BRIX_semaphore_signal_exit_red,        ZOOM_LEVEL_IN_4X,  BIT_DEPTH_32BPP, "gfx_32bpp/signals-semaphore.png")      {template_SIGNALS_x4_8rotations(0, 2)}
alternative_sprites(BRIX_semaphore_signal_combo_green,     ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx_32bpp/signals-semaphore.png")      {template_SIGNALS_x1_8rotations(1, 3)}
alternative_sprites(BRIX_semaphore_signal_combo_green,     ZOOM_LEVEL_IN_4X,  BIT_DEPTH_8BPP,  "gfx_32bpp/signals-semaphore-8bpp.png") {template_SIGNALS_x4_8rotations(1, 3)}
alternative_sprites(BRIX_semaphore_signal_combo_green,     ZOOM_LEVEL_IN_4X,  BIT_DEPTH_32BPP, "gfx_32bpp/signals-semaphore.png")      {template_SIGNALS_x4_8rotations(1, 3)}
alternative_sprites(BRIX_semaphore_signal_combo_red,       ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx_32bpp/signals-semaphore.png")      {template_SIGNALS_x1_8rotations(0, 3)}
alternative_sprites(BRIX_semaphore_signal_combo_red,       ZOOM_LEVEL_IN_4X,  BIT_DEPTH_8BPP,  "gfx_32bpp/signals-semaphore-8bpp.png") {template_SIGNALS_x4_8rotations(0, 3)}
alternative_sprites(BRIX_semaphore_signal_combo_red,       ZOOM_LEVEL_IN_4X,  BIT_DEPTH_32BPP, "gfx_32bpp/signals-semaphore.png")      {template_SIGNALS_x4_8rotations(0, 3)}
alternative_sprites(BRIX_semaphore_signal_2wayPBS_green,   ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx_32bpp/signals-semaphore.png")      {template_SIGNALS_x1_8rotations(1, 4)}
alternative_sprites(BRIX_semaphore_signal_2wayPBS_green,   ZOOM_LEVEL_IN_4X,  BIT_DEPTH_8BPP,  "gfx_32bpp/signals-semaphore-8bpp.png") {template_SIGNALS_x4_8rotations(1, 4)}
alternative_sprites(BRIX_semaphore_signal_2wayPBS_green,   ZOOM_LEVEL_IN_4X,  BIT_DEPTH_32BPP, "gfx_32bpp/signals-semaphore.png")      {template_SIGNALS_x4_8rotations(1, 4)}
alternative_sprites(BRIX_semaphore_signal_2wayPBS_red,     ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx_32bpp/signals-semaphore.png")      {template_SIGNALS_x1_8rotations(0, 4)}
alternative_sprites(BRIX_semaphore_signal_2wayPBS_red,     ZOOM_LEVEL_IN_4X,  BIT_DEPTH_8BPP,  "gfx_32bpp/signals-semaphore-8bpp.png") {template_SIGNALS_x4_8rotations(0, 4)}
alternative_sprites(BRIX_semaphore_signal_2wayPBS_red,     ZOOM_LEVEL_IN_4X,  BIT_DEPTH_32BPP, "gfx_32bpp/signals-semaphore.png")      {template_SIGNALS_x4_8rotations(0, 4)}
alternative_sprites(BRIX_semaphore_signal_1wayPBS_green,   ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx_32bpp/signals-semaphore.png")      {template_SIGNALS_x1_8rotations(1, 5)}
alternative_sprites(BRIX_semaphore_signal_1wayPBS_green,   ZOOM_LEVEL_IN_4X,  BIT_DEPTH_8BPP,  "gfx_32bpp/signals-semaphore-8bpp.png") {template_SIGNALS_x4_8rotations(1, 5)}
alternative_sprites(BRIX_semaphore_signal_1wayPBS_green,   ZOOM_LEVEL_IN_4X,  BIT_DEPTH_32BPP, "gfx_32bpp/signals-semaphore.png")      {template_SIGNALS_x4_8rotations(1, 5)}
alternative_sprites(BRIX_semaphore_signal_1wayPBS_red,     ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx_32bpp/signals-semaphore.png")      {template_SIGNALS_x1_8rotations(0, 5)}
alternative_sprites(BRIX_semaphore_signal_1wayPBS_red,     ZOOM_LEVEL_IN_4X,  BIT_DEPTH_8BPP,  "gfx_32bpp/signals-semaphore-8bpp.png") {template_SIGNALS_x4_8rotations(0, 5)}
alternative_sprites(BRIX_semaphore_signal_1wayPBS_red,     ZOOM_LEVEL_IN_4X,  BIT_DEPTH_32BPP, "gfx_32bpp/signals-semaphore.png")      {template_SIGNALS_x4_8rotations(0, 5)}

switch(FEAT_RAILTYPES, SELF, BRIX_semaphore_signal_switch_block, (extra_callback_info2 & 0x000000FF)) {
	0: BRIX_semaphore_signal_block_red;
	1: BRIX_semaphore_signal_block_green;
}
switch(FEAT_RAILTYPES, SELF, BRIX_semaphore_signal_switch_entry, (extra_callback_info2 & 0x000000FF)) {
	0: BRIX_semaphore_signal_entry_red;
	1: BRIX_semaphore_signal_entry_green;
}
switch(FEAT_RAILTYPES, SELF, BRIX_semaphore_signal_switch_exit, (extra_callback_info2 & 0x000000FF)) {
	0: BRIX_semaphore_signal_exit_red;
	1: BRIX_semaphore_signal_exit_green;
}
switch(FEAT_RAILTYPES, SELF, BRIX_semaphore_signal_switch_combo, (extra_callback_info2 & 0x000000FF)) {
	0: BRIX_semaphore_signal_combo_red;
	1: BRIX_semaphore_signal_combo_green;
}
switch(FEAT_RAILTYPES, SELF, BRIX_semaphore_signal_switch_2wayPBS, (extra_callback_info2 & 0x000000FF)) {
	0: BRIX_semaphore_signal_2wayPBS_red;
	1: BRIX_semaphore_signal_2wayPBS_green;
}
switch(FEAT_RAILTYPES, SELF, BRIX_semaphore_signal_switch_1wayPBS, (extra_callback_info2 & 0x000000FF)) {
	0: BRIX_semaphore_signal_1wayPBS_red;
	1: BRIX_semaphore_signal_1wayPBS_green;
}
switch(FEAT_RAILTYPES, SELF, BRIX_semaphore_signal_switch_type, (extra_callback_info2 & 0x00FF0000) >> 16) {
	0: BRIX_semaphore_signal_switch_block;
	1: BRIX_semaphore_signal_switch_entry;
	2: BRIX_semaphore_signal_switch_exit;
	3: BRIX_semaphore_signal_switch_combo;
	4: BRIX_semaphore_signal_switch_2wayPBS;
	5: BRIX_semaphore_signal_switch_1wayPBS;
}

// BRIX light signals -----------------------------------------------------------------------------------------------
          spriteset(BRIX_light_signal_block_green, 	                                       "gfx_32bpp/signals-light-8bpp.png" ) {template_SIGNALS_x1_8rotations(1, 0)}	
alternative_sprites(BRIX_light_signal_block_green,     ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx_32bpp/signals-light.png"      ) {template_SIGNALS_x1_8rotations(1, 0)}
alternative_sprites(BRIX_light_signal_block_green,     ZOOM_LEVEL_IN_4X,  BIT_DEPTH_8BPP,  "gfx_32bpp/signals-light-8bpp.png" ) {template_SIGNALS_x4_8rotations(1, 0)}
alternative_sprites(BRIX_light_signal_block_green,     ZOOM_LEVEL_IN_4X,  BIT_DEPTH_32BPP, "gfx_32bpp/signals-light.png"      ) {template_SIGNALS_x4_8rotations(1, 0)}//---
          spriteset(BRIX_light_signal_block_red,                                        	 "gfx_32bpp/signals-light-8bpp.png" ) {template_SIGNALS_x1_8rotations(0, 0)}	
alternative_sprites(BRIX_light_signal_block_red,       ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx_32bpp/signals-light.png"      ) {template_SIGNALS_x1_8rotations(0, 0)}
alternative_sprites(BRIX_light_signal_block_red,       ZOOM_LEVEL_IN_4X,  BIT_DEPTH_8BPP,  "gfx_32bpp/signals-light-8bpp.png" ) {template_SIGNALS_x4_8rotations(0, 0)}
alternative_sprites(BRIX_light_signal_block_red,       ZOOM_LEVEL_IN_4X,  BIT_DEPTH_32BPP, "gfx_32bpp/signals-light.png"      ) {template_SIGNALS_x4_8rotations(0, 0)}//--
          spriteset(BRIX_light_signal_entry_green,                                      	 "gfx_32bpp/signals-light-8bpp.png" ) {template_SIGNALS_x1_8rotations(1, 1)}	
alternative_sprites(BRIX_light_signal_entry_green,     ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx_32bpp/signals-light.png"      ) {template_SIGNALS_x1_8rotations(1, 1)}
alternative_sprites(BRIX_light_signal_entry_green,     ZOOM_LEVEL_IN_4X,  BIT_DEPTH_8BPP,  "gfx_32bpp/signals-light-8bpp.png" ) {template_SIGNALS_x4_8rotations(1, 1)}
alternative_sprites(BRIX_light_signal_entry_green,     ZOOM_LEVEL_IN_4X,  BIT_DEPTH_32BPP, "gfx_32bpp/signals-light.png"      ) {template_SIGNALS_x4_8rotations(1, 1)}//--
					spriteset(BRIX_light_signal_entry_red, 	                                         "gfx_32bpp/signals-light-8bpp.png" ) {template_SIGNALS_x1_8rotations(0, 1)}	
alternative_sprites(BRIX_light_signal_entry_red,       ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx_32bpp/signals-light.png"      ) {template_SIGNALS_x1_8rotations(0, 1)}
alternative_sprites(BRIX_light_signal_entry_red,       ZOOM_LEVEL_IN_4X,  BIT_DEPTH_8BPP,  "gfx_32bpp/signals-light-8bpp.png" ) {template_SIGNALS_x4_8rotations(0, 1)}
alternative_sprites(BRIX_light_signal_entry_red,       ZOOM_LEVEL_IN_4X,  BIT_DEPTH_32BPP, "gfx_32bpp/signals-light.png"      ) {template_SIGNALS_x4_8rotations(0, 1)}//--
          spriteset(BRIX_light_signal_exit_green,                                       	 "gfx_32bpp/signals-light-8bpp.png" ) {template_SIGNALS_x1_8rotations(1, 2)}	
alternative_sprites(BRIX_light_signal_exit_green,      ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx_32bpp/signals-light.png"      ) {template_SIGNALS_x1_8rotations(1, 2)}
alternative_sprites(BRIX_light_signal_exit_green,      ZOOM_LEVEL_IN_4X,  BIT_DEPTH_8BPP,  "gfx_32bpp/signals-light-8bpp.png" ) {template_SIGNALS_x4_8rotations(1, 2)}
alternative_sprites(BRIX_light_signal_exit_green,      ZOOM_LEVEL_IN_4X,  BIT_DEPTH_32BPP, "gfx_32bpp/signals-light.png"      ) {template_SIGNALS_x4_8rotations(1, 2)}//--
          spriteset(BRIX_light_signal_exit_red, 	                                         "gfx_32bpp/signals-light-8bpp.png" ) {template_SIGNALS_x1_8rotations(0, 2)}	
alternative_sprites(BRIX_light_signal_exit_red,        ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx_32bpp/signals-light.png"      ) {template_SIGNALS_x1_8rotations(0, 2)}
alternative_sprites(BRIX_light_signal_exit_red,        ZOOM_LEVEL_IN_4X,  BIT_DEPTH_8BPP,  "gfx_32bpp/signals-light-8bpp.png" ) {template_SIGNALS_x4_8rotations(0, 2)}
alternative_sprites(BRIX_light_signal_exit_red,        ZOOM_LEVEL_IN_4X,  BIT_DEPTH_32BPP, "gfx_32bpp/signals-light.png"      ) {template_SIGNALS_x4_8rotations(0, 2)}//--
          spriteset(BRIX_light_signal_combo_green, 	                                       "gfx_32bpp/signals-light-8bpp.png" ) {template_SIGNALS_x1_8rotations(1, 3)}	
alternative_sprites(BRIX_light_signal_combo_green,     ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx_32bpp/signals-light.png"      ) {template_SIGNALS_x1_8rotations(1, 3)}
alternative_sprites(BRIX_light_signal_combo_green,     ZOOM_LEVEL_IN_4X,  BIT_DEPTH_8BPP,  "gfx_32bpp/signals-light-8bpp.png" ) {template_SIGNALS_x4_8rotations(1, 3)}
alternative_sprites(BRIX_light_signal_combo_green,     ZOOM_LEVEL_IN_4X,  BIT_DEPTH_32BPP, "gfx_32bpp/signals-light.png"      ) {template_SIGNALS_x4_8rotations(1, 3)}//--
          spriteset(BRIX_light_signal_combo_red,                                      	   "gfx_32bpp/signals-light-8bpp.png" ) {template_SIGNALS_x1_8rotations(0, 3)}	
alternative_sprites(BRIX_light_signal_combo_red,       ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx_32bpp/signals-light.png"      ) {template_SIGNALS_x1_8rotations(0, 3)}
alternative_sprites(BRIX_light_signal_combo_red,       ZOOM_LEVEL_IN_4X,  BIT_DEPTH_8BPP,  "gfx_32bpp/signals-light-8bpp.png" ) {template_SIGNALS_x4_8rotations(0, 3)}
alternative_sprites(BRIX_light_signal_combo_red,       ZOOM_LEVEL_IN_4X,  BIT_DEPTH_32BPP, "gfx_32bpp/signals-light.png"      ) {template_SIGNALS_x4_8rotations(0, 3)}//--
          spriteset(BRIX_light_signal_2wayPBS_green,                                       "gfx_32bpp/signals-light-8bpp.png" ) {template_SIGNALS_x1_8rotations(1, 4)}	
alternative_sprites(BRIX_light_signal_2wayPBS_green,   ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx_32bpp/signals-light.png"      ) {template_SIGNALS_x1_8rotations(1, 4)}
alternative_sprites(BRIX_light_signal_2wayPBS_green,   ZOOM_LEVEL_IN_4X,  BIT_DEPTH_8BPP,  "gfx_32bpp/signals-light-8bpp.png" ) {template_SIGNALS_x4_8rotations(1, 4)}
alternative_sprites(BRIX_light_signal_2wayPBS_green,   ZOOM_LEVEL_IN_4X,  BIT_DEPTH_32BPP, "gfx_32bpp/signals-light.png"      ) {template_SIGNALS_x4_8rotations(1, 4)}//--
          spriteset(BRIX_light_signal_2wayPBS_red,                                      	 "gfx_32bpp/signals-light-8bpp.png" ) {template_SIGNALS_x1_8rotations(0, 4)}	
alternative_sprites(BRIX_light_signal_2wayPBS_red,     ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx_32bpp/signals-light.png"      ) {template_SIGNALS_x1_8rotations(0, 4)}
alternative_sprites(BRIX_light_signal_2wayPBS_red,     ZOOM_LEVEL_IN_4X,  BIT_DEPTH_8BPP,  "gfx_32bpp/signals-light-8bpp.png" ) {template_SIGNALS_x4_8rotations(0, 4)}
alternative_sprites(BRIX_light_signal_2wayPBS_red,     ZOOM_LEVEL_IN_4X,  BIT_DEPTH_32BPP, "gfx_32bpp/signals-light.png"      ) {template_SIGNALS_x4_8rotations(0, 4)}//--
          spriteset(BRIX_light_signal_1wayPBS_green,                                       "gfx_32bpp/signals-light-8bpp.png" ) {template_SIGNALS_x1_8rotations(1, 5)}	
alternative_sprites(BRIX_light_signal_1wayPBS_green,   ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx_32bpp/signals-light.png"      ) {template_SIGNALS_x1_8rotations(1, 5)}
alternative_sprites(BRIX_light_signal_1wayPBS_green,   ZOOM_LEVEL_IN_4X,  BIT_DEPTH_8BPP,  "gfx_32bpp/signals-light-8bpp.png" ) {template_SIGNALS_x4_8rotations(1, 5)}
alternative_sprites(BRIX_light_signal_1wayPBS_green,   ZOOM_LEVEL_IN_4X,  BIT_DEPTH_32BPP, "gfx_32bpp/signals-light.png"      ) {template_SIGNALS_x4_8rotations(1, 5)}//--
          spriteset(BRIX_light_signal_1wayPBS_red,                                      	 "gfx_32bpp/signals-light-8bpp.png" ) {template_SIGNALS_x1_8rotations(0, 5)}	
alternative_sprites(BRIX_light_signal_1wayPBS_red,     ZOOM_LEVEL_NORMAL, BIT_DEPTH_32BPP, "gfx_32bpp/signals-light.png"      ) {template_SIGNALS_x1_8rotations(0, 5)}
alternative_sprites(BRIX_light_signal_1wayPBS_red,     ZOOM_LEVEL_IN_4X,  BIT_DEPTH_8BPP,  "gfx_32bpp/signals-light-8bpp.png" ) {template_SIGNALS_x4_8rotations(0, 5)}
alternative_sprites(BRIX_light_signal_1wayPBS_red,     ZOOM_LEVEL_IN_4X,  BIT_DEPTH_32BPP, "gfx_32bpp/signals-light.png"      ) {template_SIGNALS_x4_8rotations(0, 5)}//--


switch(FEAT_RAILTYPES, SELF, BRIX_light_signal_switch_block, (extra_callback_info2 & 0x000000FF)) {
	0: BRIX_light_signal_block_red;
	1: BRIX_light_signal_block_green;
}
switch(FEAT_RAILTYPES, SELF, BRIX_light_signal_switch_entry, (extra_callback_info2 & 0x000000FF)) {
	0: BRIX_light_signal_entry_red;
	1: BRIX_light_signal_entry_green;
}
switch(FEAT_RAILTYPES, SELF, BRIX_light_signal_switch_exit, (extra_callback_info2 & 0x000000FF)) {
	0: BRIX_light_signal_exit_red;
	1: BRIX_light_signal_exit_green;
}
switch(FEAT_RAILTYPES, SELF, BRIX_light_signal_switch_combo, (extra_callback_info2 & 0x000000FF)) {
	0: BRIX_light_signal_combo_red;
	1: BRIX_light_signal_combo_green;
}
switch(FEAT_RAILTYPES, SELF, BRIX_light_signal_switch_2wayPBS, (extra_callback_info2 & 0x000000FF)) {
	0: BRIX_light_signal_2wayPBS_red;
	1: BRIX_light_signal_2wayPBS_green;
}
switch(FEAT_RAILTYPES, SELF, BRIX_light_signal_switch_1wayPBS, (extra_callback_info2 & 0x000000FF)) {
	0: BRIX_light_signal_1wayPBS_red;
	1: BRIX_light_signal_1wayPBS_green;
}
switch(FEAT_RAILTYPES, SELF, BRIX_light_signal_switch_type, (extra_callback_info2 & 0x00FF0000) >> 16) {
	0: BRIX_light_signal_switch_block;
	1: BRIX_light_signal_switch_entry;
	2: BRIX_light_signal_switch_exit;
	3: BRIX_light_signal_switch_combo;
	4: BRIX_light_signal_switch_2wayPBS;
	5: BRIX_light_signal_switch_1wayPBS;
}
//--------------------------------------------------------------------------------------------------------------------------------------------------------------
// switch between semaphore and light signals
//--------------------------------------------------------------------------------------------------------------------------------------------------------------

switch(FEAT_RAILTYPES, SELF, BRIX_signals_both_slots, (extra_callback_info2 & 0x0000FF00) >> 8) {
	1: BRIX_semaphore_signal_switch_type; //semaphore
	0: BRIX_light_signal_switch_type;
}
switch(FEAT_RAILTYPES, SELF, BRIX_signals_semaphore_slot, (extra_callback_info2 & 0x0000FF00) >> 8) {
	1: BRIX_semaphore_signal_switch_type; //semaphore
	//0: BRIX_light_signal_switch_type;
}
switch(FEAT_RAILTYPES, SELF, BRIX_signals_light_slot, (extra_callback_info2 & 0x0000FF00) >> 8) {
	//1: BRIX_semaphore_signal_switch_type; //semaphore
	0: BRIX_light_signal_switch_type;
}
switch(FEAT_RAILTYPES, SELF, BRIX_signals_semaphore_in_light_slot, (extra_callback_info2 & 0x0000FF00) >> 8) {
	0: BRIX_semaphore_signal_switch_type;
}
switch(FEAT_RAILTYPES, SELF, BRIX_signals_light_in_semaphore_slot, (extra_callback_info2 & 0x0000FF00) >> 8) {
	1: BRIX_light_signal_switch_type; //semaphore
}
switch(FEAT_RAILTYPES, SELF, BRIX_signals_both_slots_inverted, (extra_callback_info2 & 0x0000FF00) >> 8) {
	1: BRIX_light_signal_switch_type; //semaphore
	0: BRIX_semaphore_signal_switch_type;
}
//--------------------------------------------------------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------------------------------------------------------


//RAILTYPES
item (FEAT_RAILTYPES, rail, 1){
  property{
  label: 							"RAIL";
  introduction_date:				date(1920,01,01);
  name: 							string(STR_RAIL);
  toolbar_caption:				string(STR_RAIL);
  menu_text:						string(STR_RAIL);
  build_window_caption:			string(STR_RAIL);
  autoreplace_text:				string(STR_RAIL);
  new_engine_text:				string(STR_RAIL);
  compatible_railtype_list:		["UNIV", "RAIL", "ELRL","UNI1", "UNI2","UNI3","UNI4","UNI5"];
  powered_railtype_list: 		["UNIV","UNI1", "UNI2","UNI3","UNI4","UNI5"];
  /*curve_speed_multiplier:			1;
  station_graphics:				RAILTYPE_STATION_NORMAL;
  speed_limit:					0km/h;
  acceleration_model:				ACC_MODEL_RAIL;*/
  sort_order: 07;
  curve_speed_multiplier:			0;
  }
}

item (FEAT_RAILTYPES, elrl, 2){
  property{
  label: 							"ELRL";
  introduction_date:				date(1920,01,01);
  name: 							string(STR_ELRL);
  toolbar_caption:				string(STR_ELRL);
  menu_text:						string(STR_ELRL);
  build_window_caption:			string(STR_ELRL);
  autoreplace_text:				string(STR_ELRL);
  new_engine_text:				string(STR_ELRL);
  compatible_railtype_list:		["UNIV", "RAIL", "ELRL","UNI1", "UNI2","UNI3","UNI4","UNI5"];
  powered_railtype_list: 		["UNIV", "ELRL","UNI1", "UNI2","UNI3","UNI4","UNI5"];
  /*curve_speed_multiplier:			1;
  station_graphics:				RAILTYPE_STATION_NORMAL;
  speed_limit:					0km/h;
  acceleration_model:				ACC_MODEL_RAIL;*/
  sort_order: 17;
  curve_speed_multiplier:			0;
  }
}



item (FEAT_RAILTYPES, mono, 3){
  property{
  label: 							"MONO";
  introduction_date:				date(1987,01,01);
  name: 							string(STR_MONO);
  toolbar_caption:				string(STR_MONO);
  menu_text:						string(STR_MONO);
  build_window_caption:			string(STR_MONO);
  autoreplace_text:				string(STR_MONO);
  new_engine_text:				string(STR_MONO);
  compatible_railtype_list:		["UNIV", "MONO","PMO1", "PMO2","PMO3","PMO4","PMO5"];
  powered_railtype_list: 		["UNIV", "MONO","PMO1", "PMO2","PMO3","PMO4","PMO5"];
  /*station_graphics:				RAILTYPE_STATION_MONORAIL;
  speed_limit:					0km/h;
  acceleration_model:				ACC_MODEL_RAIL;*/
  sort_order: 27;
  curve_speed_multiplier:			0;
  }
}


item (FEAT_RAILTYPES, mglv, 4){
  property{
  label: 							"MGLV";
  introduction_date:				date(1997,01,01);
  name: 							string(STR_MGLV);
  toolbar_caption:				string(STR_MGLV);
  menu_text:						string(STR_MGLV);
  build_window_caption:			string(STR_MGLV);
  autoreplace_text:				string(STR_MGLV);
  new_engine_text:				string(STR_MGLV);
  compatible_railtype_list:		["UNIV", "MGLV", "PML1", "PML2","PML3","PML4","PML5"];
  powered_railtype_list: 		["UNIV", "MGLV", "PML1", "PML2","PML3","PML4","PML5"];
  sort_order: 37;
  curve_speed_multiplier:			0;
  }
}


/*
item (FEAT_RAILTYPES, universalrail, 15){
property{
label: 							"UNIV";
introduction_date:				date(1950,01,01);
name: 							string(STR_UNIV);
toolbar_caption:				string(STR_UNIV);
menu_text:						string(STR_UNIV);
build_window_caption:			string(STR_UNIV);
autoreplace_text:				string(STR_UNIV);
new_engine_text:				string(STR_UNIV);
compatible_railtype_list:		["UNIV", "RAIL", "ELRL", "MONO", "MGLV", "WETR","UNI1", "UNI2","UNI3","UNI4","UNI5"];
powered_railtype_list: 			["UNIV", "RAIL", "ELRL", "MONO", "MGLV", "WETR","UNI1", "UNI2","UNI3","UNI4","UNI5"];
curve_speed_multiplier:			0;
sort_order: 255;
construction_cost: 200;
}
}
*/

item (FEAT_RAILTYPES, wetrails, 12){
property{
label: 							"WETR";
introduction_date:				date(1950,01,01);
name: 							string(STR_WETR);
toolbar_caption:				string(STR_WETR);
menu_text:						string(STR_WETR);
build_window_caption:			string(STR_WETR);
autoreplace_text:				string(STR_WETR);
new_engine_text:				string(STR_WETR);
compatible_railtype_list:		["WETR", "UNIV", "UNI1", "UNI2","UNI3","UNI4","UNI5"];
powered_railtype_list: 			["WETR", "UNIV", "UNI1", "UNI2","UNI3","UNI4","UNI5"];
sort_order: 47;
speed_limit: 121 km/h;
curve_speed_multiplier:			0;
}
graphics{
track_overlay: canalrails_overlays;
underlay: canalrails_underlays;
tunnels: tunnels_switch;
bridge_surfaces: bridge_overlay_switch;
level_crossings: canalrails_road_crossing;
//signals: canalrails_signal_switch_none;
}
}


//------------------------------------------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------------------------------------------

spriteset(PURR_1_overlays, "gfx/_PURR_1.png") {overlay()}	
spriteset(PURR_1_underlays, "gfx/_PURR_1.png") {underlay()}	
spriteset(PURR_1_tunnels, "gfx/_PURR_1.png") {tunnels(0)}	
spriteset(PURR_1_tunnels_bk, "gfx/_PURR_1.png") {tunnels(1)}	
spriteset(PURR_1_road_crossing, "gfx/_PURR_1.png") {road_crossing()}

spriteset(PURR_1_bridge_surfaces_original, "gfx/_PURR_1.png") {bridge_surfaces(0)}	
spriteset(PURR_1_bridge_surfaces_newbridges, "gfx/_PURR_1.png") {bridge_surfaces(400)}	


bridge_overlay_stuff1 = 0;

if (grf_future_status("\53\5A\05\01")) {
	bridge_overlay_stuff1 = 1;
}
if (grf_future_status("\74\67\74\62")) {
	bridge_overlay_stuff1 = 1;
}

tunnel_stuff1 = 0;
if (grf_future_status("\42\4B\54\62")) {
	tunnel_stuff1 = 1;
}	

switch(FEAT_RAILTYPES, SELF, PURR_1_bridge_overlay_switch, bridge_overlay_stuff1) {
  1: PURR_1_bridge_surfaces_newbridges;
  PURR_1_bridge_surfaces_original;
}

switch(FEAT_RAILTYPES, SELF, PURR_1_tunnels_switch, tunnel_stuff1) {
  1: PURR_1_tunnels_bk;
  PURR_1_tunnels;
}
	
//------------------------------------------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------------------------------------------

spriteset(PURR_2_overlays, "gfx/_PURR_2.png") {overlay()}	
spriteset(PURR_2_underlays, "gfx/_PURR_2.png") {underlay()}	
spriteset(PURR_2_tunnels, "gfx/_PURR_2.png") {tunnels(0)}	
spriteset(PURR_2_tunnels_bk, "gfx/_PURR_2.png") {tunnels(1)}	
spriteset(PURR_2_road_crossing, "gfx/_PURR_2.png") {road_crossing()}

spriteset(PURR_2_bridge_surfaces_original, "gfx/_PURR_2.png") {bridge_surfaces(0)}	
spriteset(PURR_2_bridge_surfaces_newbridges, "gfx/_PURR_2.png") {bridge_surfaces(400)}	

bridge_overlay_stuff2 = 0;

if (grf_future_status("\53\5A\05\01")) {
	bridge_overlay_stuff2 = 1;
}
if (grf_future_status("\74\67\74\62")) {
	bridge_overlay_stuff2 = 1;
}

tunnel_stuff2 = 0;
if (grf_future_status("\42\4B\54\62")) {
	tunnel_stuff2 = 1;
}	

switch(FEAT_RAILTYPES, SELF, PURR_2_bridge_overlay_switch, bridge_overlay_stuff2) {
  1: PURR_2_bridge_surfaces_newbridges;
  PURR_2_bridge_surfaces_original;
}

switch(FEAT_RAILTYPES, SELF, PURR_2_tunnels_switch, tunnel_stuff2) {
  1: PURR_2_tunnels_bk;
  PURR_2_tunnels;
}	
	
//------------------------------------------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------------------------------------------

spriteset(PURR_3_overlays, "gfx/_PURR_3.png") {overlay()}	
spriteset(PURR_3_underlays, "gfx/_PURR_3.png") {underlay()}	
spriteset(PURR_3_tunnels, "gfx/_PURR_3.png") {tunnels(0)}	
spriteset(PURR_3_tunnels_bk, "gfx/_PURR_3.png") {tunnels(1)}	
spriteset(PURR_3_road_crossing, "gfx/_PURR_3.png") {road_crossing()}

spriteset(PURR_3_bridge_surfaces_original, "gfx/_PURR_3.png") {bridge_surfaces(0)}	
spriteset(PURR_3_bridge_surfaces_newbridges, "gfx/_PURR_3.png") {bridge_surfaces(400)}	

bridge_overlay_stuff3 = 0;

if (grf_future_status("\53\5A\05\01")) {
	bridge_overlay_stuff3 = 1;
}
if (grf_future_status("\74\67\74\62")) {
	bridge_overlay_stuff3 = 1;
}

tunnel_stuff3 = 0;
if (grf_future_status("\42\4B\54\62")) {
	tunnel_stuff3 = 1;
}	

switch(FEAT_RAILTYPES, SELF, PURR_3_bridge_overlay_switch, bridge_overlay_stuff3) {
  1: PURR_3_bridge_surfaces_newbridges;
  PURR_3_bridge_surfaces_original;
}

switch(FEAT_RAILTYPES, SELF, PURR_3_tunnels_switch, tunnel_stuff3) {
  1: PURR_3_tunnels_bk;
  PURR_3_tunnels;
}

//------------------------------------------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------------------------------------------

spriteset(PURR_4_overlays, "gfx/_PURR_4.png") {overlay()}	
spriteset(PURR_4_underlays, "gfx/_PURR_4.png") {underlay()}	
spriteset(PURR_4_tunnels, "gfx/_PURR_4.png") {tunnels(0)}	
spriteset(PURR_4_tunnels_bk, "gfx/_PURR_4.png") {tunnels(1)}	
spriteset(PURR_4_road_crossing, "gfx/_PURR_4.png") {road_crossing()}

spriteset(PURR_4_bridge_surfaces_original, "gfx/_PURR_4.png") {bridge_surfaces(0)}	
spriteset(PURR_4_bridge_surfaces_newbridges, "gfx/_PURR_4.png") {bridge_surfaces(400)}	

bridge_overlay_stuff4 = 0;

if (grf_future_status("\53\5A\05\01")) {
	bridge_overlay_stuff4 = 1;
}
if (grf_future_status("\74\67\74\62")) {
	bridge_overlay_stuff4 = 1;
}

tunnel_stuff4 = 0;
if (grf_future_status("\42\4B\54\62")) {
	tunnel_stuff4 = 1;
}	

switch(FEAT_RAILTYPES, SELF, PURR_4_bridge_overlay_switch, bridge_overlay_stuff4) {
  1: PURR_4_bridge_surfaces_newbridges;
  PURR_4_bridge_surfaces_original;
}

switch(FEAT_RAILTYPES, SELF, PURR_4_tunnels_switch, tunnel_stuff4) {
  1: PURR_4_tunnels_bk;
  PURR_4_tunnels;
}

//------------------------------------------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------------------------------------------

spriteset(PURR_5_overlays, "gfx/_PURR_5.png") {overlay()}	
spriteset(PURR_5_underlays, "gfx/_PURR_5.png") {underlay()}	
spriteset(PURR_5_tunnels, "gfx/_PURR_5.png") {tunnels(0)}	
spriteset(PURR_5_tunnels_bk, "gfx/_PURR_5.png") {tunnels(1)}	
spriteset(PURR_5_road_crossing, "gfx/_PURR_5.png") {road_crossing()}

spriteset(PURR_5_bridge_surfaces_original, "gfx/_PURR_5.png") {bridge_surfaces(0)}	
spriteset(PURR_5_bridge_surfaces_newbridges, "gfx/_PURR_5.png") {bridge_surfaces(400)}	


bridge_overlay_stuff5 = 0;

if (grf_future_status("\53\5A\05\01")) {
	bridge_overlay_stuff5 = 1;
}
if (grf_future_status("\74\67\74\62")) {
	bridge_overlay_stuff5= 1;
}

tunnel_stuff5 = 0;
if (grf_future_status("\42\4B\54\62")) {
	tunnel_stuff5 = 1;
}	

switch(FEAT_RAILTYPES, SELF, PURR_5_bridge_overlay_switch, bridge_overlay_stuff5) {
  1: PURR_5_bridge_surfaces_newbridges;
  PURR_5_bridge_surfaces_original;
}

switch(FEAT_RAILTYPES, SELF, PURR_5_tunnels_switch, tunnel_stuff5) {
  1: PURR_5_tunnels_bk;
  PURR_5_tunnels;
}


//------------------------------------------------------------------------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------------------------------------------------------------------------

//CLEAN
item (FEAT_RAILTYPES, univrail1, 6){
property{
label: 							"UNI1";
introduction_date:				date(0,01,01);
name: 							string(STR_PURR_1);
toolbar_caption:				string(STR_PURR_1);
menu_text:						string(STR_PURR_1);
build_window_caption:			string(STR_PURR_1);
autoreplace_text:				string(STR_PURR_1);
new_engine_text:				string(STR_PURR_1);
compatible_railtype_list:		["UNIV", "RAIL", "ELRL", "MONO", "MGLV", "WETR", "UNI1", "UNI2", "UNI3", "UNI4", "UNI5"];
powered_railtype_list: 			["UNIV", "RAIL", "ELRL", "MONO", "MGLV", "WETR", "UNI1", "UNI2", "UNI3", "UNI4", "UNI5"];
curve_speed_multiplier:			0;
sort_order: 200;
construction_cost: 20;
station_graphics:	 RAILTYPE_STATION_NORMAL;
acceleration_model:				ACC_MODEL_RAIL;
}
graphics{
track_overlay: PURR_1_overlays;
underlay: PURR_1_underlays;
tunnels: PURR_1_tunnels_switch;
bridge_surfaces: PURR_1_bridge_overlay_switch;
level_crossings: PURR_1_road_crossing;
}
}


//YELLOW
item (FEAT_RAILTYPES, univrail2, 7){
property{
label: 							"UNI2";
introduction_date:				date(0,01,01);
name: 							string(STR_PURR_2);
toolbar_caption:				string(STR_PURR_2);
menu_text:						string(STR_PURR_2);
build_window_caption:			string(STR_PURR_2);
autoreplace_text:				string(STR_PURR_2);
new_engine_text:				string(STR_PURR_2);
compatible_railtype_list:		["UNIV", "RAIL", "ELRL", "MONO", "MGLV", "WETR", "UNI1", "UNI2", "UNI3", "UNI4", "UNI5"];
powered_railtype_list: 			["UNIV", "RAIL", "ELRL", "MONO", "MGLV", "WETR", "UNI1", "UNI2", "UNI3", "UNI4", "UNI5"];
curve_speed_multiplier:			0;
sort_order: 201;
construction_cost: 35;
station_graphics:	 RAILTYPE_STATION_NORMAL;
acceleration_model:				ACC_MODEL_RAIL;
}
graphics{
track_overlay: PURR_2_overlays;
underlay: PURR_2_underlays;
tunnels: PURR_2_tunnels_switch;
bridge_surfaces: PURR_2_bridge_overlay_switch;
level_crossings: PURR_2_road_crossing;
}
}


//RED
item (FEAT_RAILTYPES, univrail3, 8){
property{
label: 							"UNI3";
introduction_date:				date(0,01,01);
name: 							string(STR_PURR_3);
toolbar_caption:				string(STR_PURR_3);
menu_text:						string(STR_PURR_3);
build_window_caption:			string(STR_PURR_3);
autoreplace_text:				string(STR_PURR_3);
new_engine_text:				string(STR_PURR_3);
compatible_railtype_list:		["UNIV", "RAIL", "ELRL", "MONO", "MGLV", "WETR", "UNI1", "UNI2", "UNI3", "UNI4", "UNI5"];
powered_railtype_list: 			["UNIV", "RAIL", "ELRL", "MONO", "MGLV", "WETR", "UNI1", "UNI2", "UNI3", "UNI4", "UNI5"];
curve_speed_multiplier:			0;
sort_order: 202;
construction_cost: 35;
station_graphics:	 RAILTYPE_STATION_NORMAL;
acceleration_model:				ACC_MODEL_RAIL;
}
graphics{
track_overlay: PURR_3_overlays;
underlay: PURR_3_underlays;
tunnels: PURR_3_tunnels_switch;
bridge_surfaces: PURR_3_bridge_overlay_switch;
level_crossings: PURR_3_road_crossing;
}
}


//BLUE
item (FEAT_RAILTYPES, univrail4, 9){
property{
label: 							"UNI4";
introduction_date:				date(0,01,01);
name: 							string(STR_PURR_4);
toolbar_caption:				string(STR_PURR_4);
menu_text:						string(STR_PURR_4);
build_window_caption:			string(STR_PURR_4);
autoreplace_text:				string(STR_PURR_4);
new_engine_text:				string(STR_PURR_4);
compatible_railtype_list:		["UNIV", "RAIL", "ELRL", "MONO", "MGLV", "WETR", "UNI1", "UNI2", "UNI3", "UNI4", "UNI5"];
powered_railtype_list: 			["UNIV", "RAIL", "ELRL", "MONO", "MGLV", "WETR", "UNI1", "UNI2", "UNI3", "UNI4", "UNI5"];
curve_speed_multiplier:			0;
sort_order: 203;
construction_cost: 35;
station_graphics:	 RAILTYPE_STATION_NORMAL;
acceleration_model:				ACC_MODEL_RAIL;
}
graphics{
track_overlay: PURR_4_overlays;
underlay: PURR_4_underlays;
tunnels: PURR_4_tunnels_switch;
bridge_surfaces: PURR_4_bridge_overlay_switch;
level_crossings: PURR_4_road_crossing;
}
}


//GREEN
item (FEAT_RAILTYPES, univrail5, 10){
property{
label: 							"UNI5";
introduction_date:				date(0,01,01);
name: 							string(STR_PURR_5);
toolbar_caption:				string(STR_PURR_5);
menu_text:						string(STR_PURR_5);
build_window_caption:			string(STR_PURR_5);
autoreplace_text:				string(STR_PURR_5);
new_engine_text:				string(STR_PURR_5);
compatible_railtype_list:		["UNIV", "RAIL", "ELRL", "MONO", "MGLV", "WETR", "UNI1", "UNI2", "UNI3", "UNI4", "UNI5"];
powered_railtype_list: 			["UNIV", "RAIL", "ELRL", "MONO", "MGLV", "WETR", "UNI1", "UNI2", "UNI3", "UNI4", "UNI5"];
curve_speed_multiplier:			0;
sort_order: 204;
construction_cost: 35;
station_graphics:	 RAILTYPE_STATION_NORMAL;
acceleration_model:				ACC_MODEL_RAIL;
}
graphics{
track_overlay: PURR_5_overlays;
underlay: PURR_5_underlays;
tunnels: PURR_5_tunnels_switch;
bridge_surfaces: PURR_5_bridge_overlay_switch;
level_crossings: PURR_5_road_crossing;
}
}

//---------------------------------------------------------------------------------------------------------------------
//----------- NEW PARAMETERS ------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------------------------

//---------------------------------------------------------------------------------------------------------------------
if (param_signals >= 1){ // WETRAIL SIGNALS ONLY
	if (param_signals_slot == 0){ //signals in both slots
		item(FEAT_RAILTYPES, wetrails, 12){
			graphics{
				signals: BRIX_signals_both_slots;
			}
		}
	}
	if (param_signals_slot == 1){ //only in semaphore slot
		item(FEAT_RAILTYPES, wetrails, 12){
			graphics{
				signals: BRIX_signals_semaphore_slot;
			}
		}
	}
	if (param_signals_slot == 2){ //only in light slot
		item(FEAT_RAILTYPES, wetrails, 12){
			graphics{
				signals: BRIX_signals_light_slot;
			}
		}	
	}
	if (param_signals_slot == 3){ //semaphore in light slot
		item(FEAT_RAILTYPES, wetrails, 12){
			graphics{
				signals: BRIX_signals_semaphore_in_light_slot;
			}
		}	
	}
	if (param_signals_slot == 4){ //light in semaphore slot
		item(FEAT_RAILTYPES, wetrails, 12){
			graphics{
				signals: BRIX_signals_light_in_semaphore_slot;
			}
		}	
	}
	if (param_signals_slot == 5){ //signals in both slots, inverted
		item(FEAT_RAILTYPES, wetrails, 12){
			graphics{
				signals: BRIX_signals_both_slots_inverted;
			}
		}	
	}
}
//---------------------------------------------------------------------------------------------------------------------
if (param_signals >= 2){ // WETRAIL AND PURR SIGNALS
	if (param_signals_slot == 0){ //signals in both slots
		item(FEAT_RAILTYPES, PURR_1, 6){
			graphics{
				signals: BRIX_signals_both_slots;
			}
		}
		item(FEAT_RAILTYPES, PURR_2, 7){
			graphics{
				signals: BRIX_signals_both_slots;
			}
		}
		item(FEAT_RAILTYPES, PURR_3, 8){
			graphics{
				signals: BRIX_signals_both_slots;
			}
		}
		item(FEAT_RAILTYPES, PURR_4, 9){
			graphics{
				signals: BRIX_signals_both_slots;
			}
		}
		item(FEAT_RAILTYPES, PURR_5, 10){
			graphics{
				signals: BRIX_signals_both_slots;
			}
		}
	}
	if (param_signals_slot == 1){ //only in semaphore slot
		item(FEAT_RAILTYPES, PURR_1, 6){
			graphics{
				signals: BRIX_signals_semaphore_slot;
			}
		}
		item(FEAT_RAILTYPES, PURR_2, 7){
			graphics{
				signals: BRIX_signals_semaphore_slot;
			}
		}
		item(FEAT_RAILTYPES, PURR_3, 8){
			graphics{
				signals: BRIX_signals_semaphore_slot;
			}
		}
		item(FEAT_RAILTYPES, PURR_4, 9){
			graphics{
				signals: BRIX_signals_semaphore_slot;
			}
		}
		item(FEAT_RAILTYPES, PURR_5, 10){
			graphics{
				signals: BRIX_signals_semaphore_slot;
			}
		}
	}
	if (param_signals_slot == 2){ //only in light slot
		item(FEAT_RAILTYPES, PURR_1, 6){
			graphics{
				signals: BRIX_signals_light_slot;
			}
		}
		item(FEAT_RAILTYPES, PURR_2, 7){
			graphics{
				signals: BRIX_signals_light_slot;
			}
		}
		item(FEAT_RAILTYPES, PURR_3, 8){
			graphics{
				signals: BRIX_signals_light_slot;
			}
		}
		item(FEAT_RAILTYPES, PURR_4, 9){
			graphics{
				signals: BRIX_signals_light_slot;
			}
		}
		item(FEAT_RAILTYPES, PURR_5, 10){
			graphics{
				signals: BRIX_signals_light_slot;
			}
		}
	}
	if (param_signals_slot == 3){ //semaphore in light slot
        item(FEAT_RAILTYPES, PURR_1, 6){
			graphics{
				signals: BRIX_signals_semaphore_in_light_slot;
			}
		}
		item(FEAT_RAILTYPES, PURR_2, 7){
			graphics{
				signals: BRIX_signals_semaphore_in_light_slot;
			}
		}
		item(FEAT_RAILTYPES, PURR_3, 8){
			graphics{
				signals: BRIX_signals_semaphore_in_light_slot;
			}
		}
		item(FEAT_RAILTYPES, PURR_4, 9){
			graphics{
				signals: BRIX_signals_semaphore_in_light_slot;
			}
		}
		item(FEAT_RAILTYPES, PURR_5, 10){
			graphics{
				signals: BRIX_signals_semaphore_in_light_slot;
			}
		}
	}
	if (param_signals_slot == 4){ //light in semaphore slot
        item(FEAT_RAILTYPES, PURR_1, 6){
			graphics{
				signals: BRIX_signals_light_in_semaphore_slot;
			}
		}
		item(FEAT_RAILTYPES, PURR_2, 7){
			graphics{
				signals: BRIX_signals_light_in_semaphore_slot;
			}
		}
		item(FEAT_RAILTYPES, PURR_3, 8){
			graphics{
				signals: BRIX_signals_light_in_semaphore_slot;
			}
		}
		item(FEAT_RAILTYPES, PURR_4, 9){
			graphics{
				signals: BRIX_signals_light_in_semaphore_slot;
			}
		}
		item(FEAT_RAILTYPES, PURR_5, 10){
			graphics{
				signals: BRIX_signals_light_in_semaphore_slot;
			}
		}
	}
	if (param_signals_slot == 5){ //signals in both slots, inverted
		item(FEAT_RAILTYPES, PURR_1, 6){
			graphics{
				signals: BRIX_signals_both_slots_inverted;
			}
		}
		item(FEAT_RAILTYPES, PURR_2, 7){
			graphics{
				signals: BRIX_signals_both_slots_inverted;
			}
		}
		item(FEAT_RAILTYPES, PURR_3, 8){
			graphics{
				signals: BRIX_signals_both_slots_inverted;
			}
		}
		item(FEAT_RAILTYPES, PURR_4, 9){
			graphics{
				signals: BRIX_signals_both_slots_inverted;
			}
		}
		item(FEAT_RAILTYPES, PURR_5, 10){
			graphics{
				signals: BRIX_signals_both_slots_inverted;
			}
		}
	}
}
//---------------------------------------------------------------------------------------------------------------------
if (param_signals >= 3){ // ALL NUTS RAILTYPES SIGNALS
	if (param_signals_slot == 0){ //signals in both slots
		item(FEAT_RAILTYPES, rail, 1){
			graphics{
				signals: BRIX_signals_both_slots;
			}
		}
		item(FEAT_RAILTYPES, elrl, 2){
			graphics{
				signals: BRIX_signals_both_slots;
			}
		}
		item(FEAT_RAILTYPES, mono, 3){
			graphics{
				signals: BRIX_signals_both_slots;
			}
		}
		item(FEAT_RAILTYPES, mglv, 4){
			graphics{
				signals: BRIX_signals_both_slots;
			}
		}
	}
	if (param_signals_slot == 1){ //only in semaphore slot
		item(FEAT_RAILTYPES, rail, 1){
			graphics{
				signals: BRIX_signals_semaphore_slot;
			}
		}
		item(FEAT_RAILTYPES, elrl, 2){
			graphics{
				signals: BRIX_signals_semaphore_slot;
			}
		}
		item(FEAT_RAILTYPES, mono, 3){
			graphics{
				signals: BRIX_signals_semaphore_slot;
			}
		}
		item(FEAT_RAILTYPES, mglv, 4){
			graphics{
				signals: BRIX_signals_semaphore_slot;
			}
		}
	}
	if (param_signals_slot == 2){ //only in light slot
		item(FEAT_RAILTYPES, rail, 1){
			graphics{
				signals: BRIX_signals_light_slot;
			}
		}	
		item(FEAT_RAILTYPES, elrl, 2){
			graphics{
				signals: BRIX_signals_light_slot;
			}
		}	
		item(FEAT_RAILTYPES, mono, 3){
			graphics{
				signals: BRIX_signals_light_slot;
			}
		}	
		item(FEAT_RAILTYPES, mglv, 4){
			graphics{
				signals: BRIX_signals_light_slot;
			}
		}	
	}
	if (param_signals_slot == 3){ //semaphore in light slot
		item(FEAT_RAILTYPES, rail, 1){
			graphics{
				signals: BRIX_signals_semaphore_in_light_slot;
			}
		}	
		item(FEAT_RAILTYPES, elrl, 2){
			graphics{
				signals: BRIX_signals_semaphore_in_light_slot;
			}
		}	
		item(FEAT_RAILTYPES, mono, 3){
			graphics{
				signals: BRIX_signals_semaphore_in_light_slot;
			}
		}	
		item(FEAT_RAILTYPES, mglv, 4){
			graphics{
				signals: BRIX_signals_semaphore_in_light_slot;
			}
		}	
	}
	if (param_signals_slot == 4){ //light in semaphore slot
		item(FEAT_RAILTYPES, rail, 1){
			graphics{
				signals: BRIX_signals_light_in_semaphore_slot;
			}
		}	
		item(FEAT_RAILTYPES, elrl, 2){
			graphics{
				signals: BRIX_signals_light_in_semaphore_slot;
			}
		}	
		item(FEAT_RAILTYPES, mono, 3){
			graphics{
				signals: BRIX_signals_light_in_semaphore_slot;
			}
		}	
		item(FEAT_RAILTYPES, mglv, 4){
			graphics{
				signals: BRIX_signals_light_in_semaphore_slot;
			}
		}	
	}
	if (param_signals_slot == 5){ //signals in both slots, inverted
		item(FEAT_RAILTYPES, rail, 1){
			graphics{
				signals: BRIX_signals_both_slots_inverted;
			}
		}	
		item(FEAT_RAILTYPES, elrl, 2){
			graphics{
				signals: BRIX_signals_both_slots_inverted;
			}
		}	
		item(FEAT_RAILTYPES, mono, 3){
			graphics{
				signals: BRIX_signals_both_slots_inverted;
			}
		}	
		item(FEAT_RAILTYPES, mglv, 4){
			graphics{
				signals: BRIX_signals_both_slots_inverted;
			}
		}	
	}
}
